<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.netflix.business.dao.LikeUpMapper">
  <resultMap id="BaseResultMap" type="com.netflix.business.domain.LikeUp">
    <id column="LIKE_ID" jdbcType="VARCHAR" property="likeId" />
    <result column="LIKE_OBJECT_ID" jdbcType="VARCHAR" property="likeObjectId" />
    <result column="LIKE_USER_ID" jdbcType="VARCHAR" property="likeUserId" />
  </resultMap>
  <sql id="Base_Column_List">
    LIKE_ID, LIKE_OBJECT_ID, LIKE_USER_ID
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from LIKE_UP
    where LIKE_ID = #{likeId,jdbcType=VARCHAR}
  </select>
  
  
   <select id="select"  resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from LIKE_UP
     where LIKE_OBJECT_ID = #{likeObjectId,jdbcType=VARCHAR} AND LIKE_USER_ID = #{likeUserId,jdbcType=VARCHAR}
  </select>
  
  
    <select id="selectCountByObjectId" resultType="java.lang.Integer">
    select 
    count(*)
    from LIKE_UP
    where LIKE_OBJECT_ID = #{likeObjectId,jdbcType=VARCHAR}
  </select>
  
    <select id="selectCount" resultType="java.lang.Integer">
    select 
    count(*)
    from LIKE_UP
    where LIKE_OBJECT_ID = #{likeObjectId,jdbcType=VARCHAR} AND LIKE_USER_ID = #{likeUserId,jdbcType=VARCHAR}
  </select>
  
  
  
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from LIKE_UP
    where LIKE_ID = #{likeId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.netflix.business.domain.LikeUp">
    insert into LIKE_UP (LIKE_ID, LIKE_OBJECT_ID, LIKE_USER_ID
      )
    values (#{likeId,jdbcType=VARCHAR}, #{likeObjectId,jdbcType=VARCHAR}, #{likeUserId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.netflix.business.domain.LikeUp">
    insert into LIKE_UP
    <trim prefix="(" suffix=")" suffixOverrides=",">
      
        LIKE_ID,
     
      <if test="likeObjectId != null">
        LIKE_OBJECT_ID,
      </if>
      <if test="likeUserId != null">
        LIKE_USER_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
     
        sys_guid(),
    
      <if test="likeObjectId != null">
        #{likeObjectId,jdbcType=VARCHAR},
      </if>
      <if test="likeUserId != null">
        #{likeUserId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.netflix.business.domain.LikeUp">
    update LIKE_UP
    <set>
      <if test="likeObjectId != null">
        LIKE_OBJECT_ID = #{likeObjectId,jdbcType=VARCHAR},
      </if>
      <if test="likeUserId != null">
        LIKE_USER_ID = #{likeUserId,jdbcType=VARCHAR},
      </if>
    </set>
    where LIKE_ID = #{likeId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.netflix.business.domain.LikeUp">
    update LIKE_UP
    set LIKE_OBJECT_ID = #{likeObjectId,jdbcType=VARCHAR},
      LIKE_USER_ID = #{likeUserId,jdbcType=VARCHAR}
    where LIKE_ID = #{likeId,jdbcType=VARCHAR}
  </update>
</mapper>